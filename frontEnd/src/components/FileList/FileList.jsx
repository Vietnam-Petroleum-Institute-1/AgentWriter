import PropTypes from "prop-types";

// H√†m ƒë·ªÉ x√°c ƒë·ªãnh h√¨nh ƒë·∫°i di·ªán cho t·ª´ng lo·∫°i file
const getFileIcon = (type) => {
  if (type.startsWith("image/")) {
    return "üñºÔ∏è"; // Bi·ªÉu t∆∞·ª£ng cho ·∫£nh
  } else if (type.startsWith("application/pdf")) {
    return "üìÑ"; // Bi·ªÉu t∆∞·ª£ng cho PDF
  } else {
    return "üìÅ"; // Bi·ªÉu t∆∞·ª£ng cho file kh√°c
  }
};

const FileList = ({ files }) => {
  if (!files || !Array.isArray(files)) {
    return null; // N·∫øu files kh√¥ng h·ª£p l·ªá, kh√¥ng render g√¨
  }

  return (
    <div className="p-4 border-2 border-green-500 rounded-lg shadow-md mt-4 bg-black">
      <h2 className="text-xl font-semibold mb-4">Uploaded Files</h2>

      <ul>
        {files.map((file, index) => (
          <div
            key={index}
            className="border-2 border-blue-500 rounded-full flex items-center w-full h-24 p-2" // ƒê·∫∑t chi·ªÅu r·ªông th√†nh 100% c·ªßa l·ªõp cha
          >
            <div className="flex items-center">
              {/* Thay th·∫ø icon.type b·∫±ng bi·ªÉu t∆∞·ª£ng th·ª±c t·∫ø, ƒë√¢y ch·ªâ l√† v√≠ d·ª• */}
              <span className="material-icons mr-2">
                {getFileIcon(file.type)}
              </span>{" "}
              {/* Icon ·ªü b√™n tr√°i */}
            </div>
            <p className="flex-grow text-center text-sm truncate">
              {file.name}
            </p>{" "}
            {/* T√™n file ·ªü gi·ªØa */}
          </div>
        ))}
      </ul>
    </div>
  );
};

// X√°c th·ª±c ki·ªÉu d·ªØ li·ªáu c·ªßa props
FileList.propTypes = {
  files: PropTypes.arrayOf(PropTypes.object).isRequired, // files l√† m·ªôt m·∫£ng c√°c ƒë·ªëi t∆∞·ª£ng v√† l√† b·∫Øt bu·ªôc
};

export default FileList;
